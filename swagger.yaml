swagger: '2.0'

info:
  version: '2.0'
  title: "SEII-project-1-swagger"
  description: SEII-project-1 is a simple API allowing to view the university's digital bulletin board.
  license:
    name: MIT
    url: https://github.com/apiaryio/polls-api/blob/master/LICENSE
    
host: localhost:3000

tags:
- name: "announcements"
  description: "announcements in the digital bulletin board"
- name: "flyers"
  description: "flyers in the digital bulletin board"
- name: "categories"
  description: "categories of announcements and flyers"
- name: "private"
  description: "personal data of the user"
- name: "auth"
  description: "user authentication"

paths:

  /announcements:
    
    get:
      tags:
      - "announcements"
      summary: "View announcements"
      description: "You may want to view all announcements. The attributes are title, author, category, content, publish and expiry dates and expired."
      operationId: "viewAllAnn"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Announcement"
        "500":
          description: "Error"
      
  /announcements/{annid}:
  
    get:
      tags:
      - "announcements"
      summary: "View a specific announcement"
      description: "You may want to view a specific announcement. The attributes are title, author, category, content, publish and expiry dates and expired."
      operationId: "viewAnn"
      produces:
      - "application/json"
      parameters:
      - name: "annid"
        in: "path"
        description: "The ID of a specific announcement."
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Announcement"
        "404":
          description: "no value found"
        "500":
          description: "Error"
      
  /flyers:
    
    get:
      tags:
      - "flyers"
      summary: "View all flyers"
      description: "You may want to view all flyers. The attributes are author, category, title, image, publish and expiry dates and expired."
      operationId: "viewAllFly"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Flyer"
        "500":
          description: "Error"
      
  /flyers/{flyid}:
  
    get:
      tags:
      - "flyers"
      summary: "View a specific flyer"
      description: "You may want to view a specific flyer. The attributes are author, category, content, publish and expiry dates and expired."
      operationId: "viewFly"
      produces:
      - "application/json"
      parameters:
      - name: "flyid"
        in: "path"
        description: "The ID of a specific flyer."
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Flyer"
        "404":
          description: "no value found"
        "500":
          description: "Error"
    
  /cateogories:
    post:
      tags:
      - "cateogories"
      summary: "Add a new category"
      description: "You may want to add a new category (reserved to admin). The attributes are name and id."
      operationId: "addCat"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Categories needs to be displayed on the board"
        required: true
        schema:
          $ref: "#/definitions/Category"
      responses:
        "201":
          description: "Valid input"
        "500":
          description: "Invalid input"
    
    get:
      tags:
      - "cateogories"
      summary: "View all categories"
      description: "You may want to view all categories. The attributes are name and id."
      operationId: "viewAllCat"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Category"
        "500":
          description: "Error"
      
  /categories/{catid}:
  
    get:
      tags:
      - "cateogories"
      summary: "View annoucements of a specific cateogory"
      description: "You may want to view a only a certain category of flyers and announcements. The attributes are name and id."
      operationId: "viewCat"
      produces:
      - "application/json"
      parameters:
      - name: "catid"
        in: "path"
        description: "Announcements and flyers are fetched and the specific category ID is selected."
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Category"
        "404":
          description: "no value found"
        "500":
          description: "Error"
    
    delete:
      tags:
      - "cateogories"
      summary: "Delete a specific cateogory"
      description: "You may want to delete a specific category (reserved to admin)."
      operationId: "deleteCat"
      produces:
      - "application/json"
      parameters:
      - name: "catid"
        in: "path"
        description: "The ID of a specific category."
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
        "404":
          description: "no value found"
        "500":
          description: "Error"  
  
  /private:
    get:
      tags:
      - "private"
      summary: "View information about the logged user"
      description: "You may want to view information about the logged user. The attributes are email and name."
      operationId: "viewUser"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        "404":
          description: "no value found"
        "500":
          description: "Error"
  
  /private/announcements:
  
    post:
      tags:
      - "private"
      - "announcements"
      summary: "Add a new announcement of the logged user"
      description: "You may want to add a new announcement. The attributes are title, author, category, content, publish and expiry dates and expired."
      operationId: "addAnnUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Announcement that needs to be added to the board"
        required: true
        schema:
          $ref: "#/definitions/Announcement"
      responses:
        "201":
          description: "Valid input"
        "500":
          description: "Invalid input"
    
    get:
      tags:
      - "announcements"
      - "private"
      summary: "View announcements of the logged user"
      description: "You may want to view all announcements of the logged user. The attributes are title, author, category, content, publish and expiry dates and expired."
      operationId: "viewAllAnnUser"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Announcement"
        "500":
          description: "Error"
  
  
  /private/announcements/{annid}:
    get:
      tags:
      - "private"
      - "announcements"
      summary: "View a single announcement of the logged user"
      description: "You may want to view a single announcement about the logged user. The attributes are title, author, category, content, publish and expiry dates and expired."
      operationId: "viewAnnUser"
      produces:
      - "application/json"
      parameters:
      - name: "annid"
        in: "path"
        description: "The specific announcement ID is selected."
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Announcement"
        "404":
          description: "no value found"
        "500":
          description: "Error"
          
    patch:
      tags:
      - "private"
      - "announcements"
      summary: "Update a specific announcement of the logged user"
      description: "You may want to update a specific announcement of the logged user."
      operationId: "patchAnnUser"
      produces:
      - "application/json"
      parameters:
      - name: "annid"
        in: "path"
        description: "The ID of a specific announcement."
        required: true
        type: "string"
      responses:
        "202":
          description: "successful operation"
        "404":
          description: "no value found"
        "500":
          description: "Error"
      
    delete:
      tags:
      - "private"
      - "announcements"
      summary: "Delete a specific announcement of the logged user"
      description: "You may want to delete a specific announcement of the logged user."
      operationId: "deleteAnnUser"
      produces:
      - "application/json"
      parameters:
      - name: "annid"
        in: "path"
        description: "The ID of a specific announcement."
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
        "404":
          description: "no value found"
        "500":
          description: "Error"  
    
  /private/flyers:
    post:
      tags:
      - "flyers"
      - "private"
      summary: "Add a new flyer of the logged user"
      description: "You may want to add a new flyer of the logged user. The attributes are author, category, title, image, publish and expiry dates and expired."
      operationId: "addFlyUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "FLyers that needs to be added to the board"
        required: true
        schema:
          $ref: "#/definitions/Flyer"
      responses:
        "201":
          description: "Valid input"
        "500":
          description: "Invalid input"
    
    get:
      tags:
      - "flyers"
      - "private"
      summary: "View all flyers of the logged user"
      description: "You may want to view all flyers of the logged user. The attributes are author, category, title, image, publish and expiry dates and expired."
      operationId: "viewAllFlyUser"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Flyer"
        "500":
          description: "Error"
  
  /private/flyers/{flyid}:
    get:
      tags:
      - "private"
      - "flyers"
      summary: "View a single flyer of the logged user"
      description: "You may want to view a single flyer about the logged user. The attributes are author, category, title,  image, publish and expiry dates and expired."
      operationId: "viewFlyUser"
      produces:
      - "application/json"
      parameters:
      - name: "flyid"
        in: "path"
        description: "The specific flyer ID is selected."
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Flyer"
        "404":
          description: "no value found"
        "500":
          description: "Error"
  
    patch:
      tags:
      - "private"
      - "flyers"
      summary: "Update a specific flyer of the logged user"
      description: "You may want to update a specific flyer of the logged user."
      operationId: "patchFlyUser"
      produces:
      - "application/json"
      parameters:
      - name: "flyid"
        in: "path"
        description: "The ID of a specific flyer."
        required: true
        type: "string"
      responses:
        "202":
          description: "successful operation"
        "404":
          description: "no value found"
        "500":
          description: "Error"
      
    delete:
      tags:
      - "private"
      - "flyers"
      summary: "Delete a specific flyer of the logged user"
      description: "You may want to delete a specific flyer of the logged user."
      operationId: "deleteFlyUser"
      produces:
      - "application/json"
      parameters:
      - name: "flyid"
        in: "path"
        description: "The ID of a specific flyer."
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
        "404":
          description: "no value found"
        "500":
          description: "Error"  
          
  /auth/register:
    post:
      tags:
      - "auth"
      summary: "New user registration"
      description: "You may want to register a new user. The attributes are email, password, name."
      operationId: "registerUser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User's email, password, name"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "201":
          description: "successful operation"
        "500":
          description: "Error"
  
  /auth/login:
    post:
      tags:
      - "auth"
      summary: "New user registration"
      description: "You may want to register a new user. The attributes are email, password, display_name."
      operationId: "loginUser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User's email, password"
        required: true
        schema:
          $ref: "#/definitions/UserLogin"
      responses:
        "201":
          description: "successful operation"
        "500":
          description: "Error"  
  
  
definitions:
  Announcement:
    type: "object"
    properties:
      annid:
        type: "string"
      title:
        type: "string"
      author:
        type: "string"
      category:
        type: "string"
      content:
        type: "string"
      publish_date:
        type: "string"
        format: "date-time"
      expiry_date:
        type: "string"
        format: "date-time"
      expired:
        type: "boolean"
      contact:
        type: "string"
  
  Flyer:
    type: "object"
    properties:
      flyid: 
        type: "string"
      author:
        type: "string"
      category:
        type: "string"
      title:
        type: "string"
      image:
        type: "object"
        properties:
          buffer:
            type: "string"
          mimeType:
            type: "string"
          name:
            type: "string"
      publishDate:
        type: "string"
        format: "date-time"
      expiryDate:
        type: "string"
        format: "date-time"
      expired:
        type: "boolean"
      contact:
        type: "string"
     
  Category:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
        
  User:
    type: "object"
    properties:
      email:
        type: "string"
      password:
        type: "string"
      displayName:
        type: "string"
      registrationDate:
        type: "string"
        format: "date-time"
      lastLoginDate:
        type: "string"
        format: "date-time"

  UserLogin:
    type: "object"
    properties:
      email:
        type: "string"
      password:
        type: "string"