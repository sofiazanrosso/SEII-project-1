FORMAT: 1A
HOST: https://polls.apiblueprint.org/

# SEII_project_1

Polls is a simple API allowing consumers to view polls and vote in them.

## Questions Collection [/questions]

### List All Questions [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]

### Create a New Question [POST]

You may create your own question using this action. It takes a JSON
object containing a question and a collection of answers in the
form of choices.

+ Request (application/json)

        {
            "question": "Favourite programming language?",
            "choices": [
                "Swift",
                "Python",
                "Objective-C",
                "Ruby"
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 0
                    }, {
                        "choice": "Python",
                        "votes": 0
                    }, {
                        "choice": "Objective-C",
                        "votes": 0
                    }, {
                        "choice": "Ruby",
                        "votes": 0
                    }
                ]
            }
            
## Announcements [/announcements/{a_id}]

### Visualize the details of an announcement [GET]

You may want to see the details of a specific announcement.
The parameter is the unique ID (a_id), the attributes are author, category, content, publish and expiry dates and the url.

+ Parameters
    + a_id (number) - ID of the announcement in the form of an integer
    
+ Response 200 (application/json)

    
        {
            "id" : "1",
            "author" : "name",
            "category" : "vendita appunti",
            "content":"text",
            "publish_date" : "12/01/2010",
            "expiry_date" : "12/02/2010",
            "url" : "/announcements/1"
        }
      
        

### Add announcement [POST]

You may want to post a new announcement.
The attributes are author, category, content, publish and expiry dates and the url.

+ Request

        {
            "id" : "1",
            "author" : "name",
            "category" : "gruppi studio",
            "content":"text",
            "publish_date" : "22/11/2011",
            "expiry_date" : "22/12/2011",
            "url" : "/announcements/1"
        }
        
+ Response 201 (application/json)

        {
            "id" : "1",
            "author" : "name",
            "category" : "gruppi studio",
            "content":"text",
            "publish_date" : "22/11/2011",
            "expiry_date" : "22/12/2011",
            "url" : "/announcements/1"
        }
    
## Flyers [/flyers/{f_id}]

### Visualize the details of a flyer [GET]

You may want to see a flyer.
The parameter is its unique ID (f_id).
The attributes are author, category, content, publish and expiry dates and the url.

+ Parameters
    + f_id (number) - ID of the flyer in the form of an integer
    
+ Response 200 (application/json)

        
        {
            "id" : "1",
            "author" : "name",
            "category" : "attività",
            "publish_date" : "22/11/2019",
            "expiry_date" : "22/12/2019",
            "url" : "/flyers/1"
        }
        

### Add flyer [POST]

You may want to post a new flyer.
The attributes are author, category, publish and expiry dates and the url.

+ Request

        {
            "id" : "1",
            "author" : "name",
            "category" : "attività",
            "publish_date" : "22/11/2015",
            "expiry_date" : "22/11/2015",
            "url" : "/flyers/1"
        }
        
+ Response 201 (application/json)

        {
            "id" : "1",
            "author" : "name",
            "category" : "attività",
            "publish_date" : "22/11/2015",
            "url" : "/flyers/1"
        }
        
## Categories [/announcements/categories/{cat_id}]

### List announcements of a certain category [GET]

Flyers and announcements belong to a specific cathergoy, you may want to see all the announcement listed for a specific one.
The parameter is the unique ID (cat_id).


+ Parameters 
    + cat_id (number) - ID of the category in the form of an integer

+ Response 200 (application/json)

        {
            "category" : "libri",
            "announcements" : [
                {
                    "title" : "name1",
                    "url" : "announcements/1"
                },
                {
                    "title" : "name2",
                    "url" : "announcements/2"
                }
            ]
        }



## Board [/board]

### Board that contains all announcements and flyers [GET]

The board contains all the announcements and flyers that has been published.

+ Response 200 (application/json)

        
        {
            "a_category" : [
                {
                    "title" : "name1",
                    "url" : "anouncements/1"
                },
                {
                    "title" : "name2",
                    "url" : "anouncements/2"
                }
            ],
            "f_category" : [
                {
                    "title" : "name1",
                    "url" : "flyers/1"
                },
                {
                    "title" : "name2",
                    "url" : "flyers/2"
                }
            ],
            
        }